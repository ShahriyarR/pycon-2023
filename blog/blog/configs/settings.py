"""
Esmerald settings for linezap project.

Generated by 'esmerald createproject' using Esmerald 1.2.5.
"""

import os
from functools import cached_property
from typing import Optional

from esmerald.conf.enums import EnvironmentType
from esmerald.conf.global_settings import EsmeraldAPISettings
from esmerald.config.jwt import JWTConfig
from saffier import Database, Registry


class DatabaseSettings(EsmeraldAPISettings):
    """
    All the database settings in the main settings config.
    """

    db_host: str = os.environ.get("DB_HOST", "localhost")
    db_port: int = os.environ.get("DB_PORT", 5432)
    db_name: str = os.environ.get("DB_NAME", "blog")
    db_user: str = os.environ.get("DB_USER", "postgres")
    db_password: str = os.environ.get("DB_PASSWORD", "postgres")


class AppSettings(DatabaseSettings):
    """
    Uses the database settings with the normal esmerald settings.
    """

    app_name: str = "My application in production mode."
    title: str = "My linezap"
    environment: Optional[str] = EnvironmentType.PRODUCTION
    secret_key: str = "esmerald-insecure-)&amp;e5_#d@%z8h+p23r-6a8nhh!sc##^8x"

    @cached_property
    def db_access(self):
        """
        Configures the database access and connection string settings.
        """
        connection_string = "postgresql+asyncpg://{user}:{passwd}@{host}:{port}/{name}".format(
            user=self.db_user,
            passwd=self.db_password,
            host=self.db_host,
            port=self.db_port,
            name=self.db_name,
        )
        database = Database(connection_string)
        registry = Registry(database=database)
        return database, registry

    @property
    def jwt_config(self) -> JWTConfig:
        return JWTConfig(signing_key=self.secret_key)
